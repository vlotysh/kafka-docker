version: "3.4"
services:
    mysql:
      image: mysql:8.0
      command: --default-authentication-plugin=mysql_native_password
      restart: always
      ports:
        - '3306:3306'
      env_file:
        - docker.env
      volumes:
          - ${MYSQL_VOLUME:-./data/mysql}:/var/lib/mysql
    nginx:
        image: 'nginx:1.20'
        ports:
          - '80:80'
          - '443:443'
        restart: always
        volumes:
            - ${ROOT_DIR:-.}/:/var/www
            - ${BUILD_CONTEXT:-.}/docker-images/nginx-extended/default.conf:/etc/nginx/conf.d/default.conf
            - ${BUILD_CONTEXT:-.}/docker-images/nginx-extended/ssl/localhost.crt:/etc/nginx/localhost.crt
            - ${BUILD_CONTEXT:-.}/docker-images/nginx-extended/ssl/localhost.key:/etc/nginx/localhost.key
    php-fpm:
        build:
          context: .
          dockerfile: ./docker-images/php-extended/Dockerfile
        image: "php-fpm"
        container_name: "php-fpm-kafka"
        env_file:
          - docker.env
        restart: always
        volumes:
            - ${BUILD_CONTEXT:-.}/docker-images/php-extended/php.ini:/usr/local/etc/php/conf.d/custom.ini
            - ${ROOT_DIR:-.}/:/var/www
        depends_on:
          - mysql
          - nginx
        command: [ "php-fpm" ]
    zookeeper:
      image: wurstmeister/zookeeper
      ports:
        - 2181:2181

    kafka:
      image: wurstmeister/kafka
      ports:
        - 9092:9092
      environment:
        KAFKA_ADVERTISED_HOST_NAME: kafka
        KAFKA_CREATE_TOPICS: "test:1:1"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      ports:
        - "8091:8080"
      restart: always
      environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
        - KAFKA_CLUSTERS_0_READONLY=false
    pma:
      image: 'phpmyadmin/phpmyadmin:latest'
      ports:
        - '8090:80'
      env_file:
        - docker.env